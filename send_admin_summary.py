# send_admin_summary.py
# JAV√çTVA: Egys√©ges√≠tve a 'TELEGRAM_TOKEN' n√©vre

import os
from supabase import create_client, Client
from dotenv import load_dotenv
import requests
from datetime import datetime, timedelta
import pytz

load_dotenv()

SUPABASE_URL = os.environ.get("SUPABASE_URL")
SUPABASE_KEY = os.environ.get("SUPABASE_KEY")

# --- JAV√çT√ÅS ---
BOT_TOKEN = os.environ.get("TELEGRAM_TOKEN") # R√©gi: TELEGRAM_BOT_TOKEN
# --- JAV√çT√ÅS V√âGE ---
ADMIN_CHAT_ID = os.environ.get("ADMIN_CHAT_ID")

if not SUPABASE_URL or not SUPABASE_KEY:
    print("Hiba: Supabase URL vagy Kulcs hi√°nyzik.")
    exit(1)

if not BOT_TOKEN or not ADMIN_CHAT_ID:
    print("Hiba: Telegram token vagy Admin Chat ID hi√°nyzik.")
    # Mivel ez a szkript kritikus az adminisztr√°ci√≥hoz, itt hib√°val √°ll le
    exit(1)

supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)
BUDAPEST_TZ = pytz.timezone('Europe/Budapest')

def send_telegram_message(chat_id, text, parse_mode="Markdown"):
    """Seg√©df√ºggv√©ny Telegram √ºzenet k√ºld√©s√©hez."""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {
        'chat_id': chat_id,
        'text': text,
        'parse_mode': parse_mode,
        'disable_web_page_preview': True
    }
    try:
        response = requests.post(url, json=payload, timeout=10)
        response.raise_for_status() 
        return response.json()
    except requests.exceptions.RequestException as e:
        print(f"Hiba a Telegram √ºzenet k√ºld√©sekor: {e}")
        return None

def get_tips_for_approval():
    """Lek√©ri a holnapi, j√≥v√°hagy√°sra v√°r√≥ tippeket."""
    try:
        tomorrow = (datetime.now(BUDAPEST_TZ) + timedelta(days=1)).strftime("%Y-%m-%d")
        
        # 1. Ellen≈ërizz√ºk a st√°tuszt
        status_response = supabase.table("daily_status").select("status, reason").eq("date", tomorrow).execute()
        
        if not status_response.data:
            return f"‚ùå Nincs st√°tusz bejegyz√©s a holnapi napra ({tomorrow})."
            
        status_data = status_response.data[0]
        status = status_data.get('status')
        reason = status_data.get('reason')

        if status == "J√≥v√°hagy√°sra v√°r":
            # 2. Lek√©rj√ºk a tippeket
            tips_response = supabase.table("napi_tuti").select("*, meccsek(*)").eq("tipp_neve", f"Napi Single #1 - {tomorrow}").execute()
            
            # (Ez a lek√©rdez√©s felt√©telezi, hogy a 'tipp_neve' pontosan egyezik.
            # Egy robusztusabb megold√°s a 'like' oper√°tort haszn√°ln√°, de maradjunk az egyszer≈±n√©l,
            # ha a V17.8+ gener√°tor garant√°lja ezt a form√°tumot.)

            if not tips_response.data:
                 return f"‚ö†Ô∏è Figyelmeztet√©s: A st√°tusz 'J√≥v√°hagy√°sra v√°r', de nem tal√°lhat√≥ tipp a '{tomorrow}' napra az adatb√°zisban."

            message = f"üîî *J√≥v√°hagy√°sra v√°r√≥ tippek ({tomorrow})*\n\n"
            message += f"St√°tusz: *{status}* ({reason})\n"
            message += "-----------------------------------\n"
            
            # Lek√©rj√ºk az √∂sszes holnapi tippet, nem csak az els≈ët
            all_tips_response = supabase.table("napi_tuti").select("*, meccsek(*)").like("tipp_neve", f"%{tomorrow}%").execute()

            for i, tip in enumerate(all_tips_response.data, 1):
                message += f"\n*Szelv√©ny #{i}* (Odds: {tip.get('eredo_odds', '?')}, Konf: {tip.get('confidence_percent', '?')} %)\n"
                if tip.get('meccsek'):
                    for meccs in tip['meccsek']:
                        message += f"  - _{meccs.get('tipp', '?')}_ ({meccs.get('csapat_H', '?')} vs {meccs.get('csapat_V', '?')})\n"
                else:
                    message += "  - (Hiba: Meccs adatok nem t√∂lt≈ëdtek be)\n"

            message += "\n-----------------------------------\n"
            message += "A tippek az adatb√°zisban vannak. A k√ºld√©shez √°ll√≠tsd √°t a 'daily_status' t√°bl√°ban a st√°tuszt 'J√≥v√°hagyva'-ra."
            return message

        elif status == "Nincs megfelel≈ë tipp":
            return f"‚ÑπÔ∏è *Nincs tipp a holnapi napra ({tomorrow})*\n\nSt√°tusz: *{status}* ({reason}). Nincs teend≈ëd."
        
        elif status == "J√≥v√°hagyva":
             return f"‚úÖ *A holnapi tippek ({tomorrow}) m√°r j√≥v√° vannak hagyva.*\n\nSt√°tusz: *{status}*. Nincs teend≈ëd."

        else:
            return f"‚ùì *Ismeretlen st√°tusz a holnapi napra ({tomorrow})*\n\nSt√°tusz: *{status}*. Ellen≈ërizd az adatb√°zist."

    except Exception as e:
        import traceback
        print(traceback.format_exc())
        return f"!!! KRITIKUS HIBA az admin √∂sszefoglal√≥ k√©sz√≠t√©sekor: {e}"

def main():
    print("Admin √∂sszefoglal√≥ k√ºld√©se indul...")
    message = get_tips_for_approval()
    if message:
        print(f"√úzenet k√ºld√©se az adminnak: {message.splitlines()[0]}")
        send_telegram_message(ADMIN_CHAT_ID, message)
    else:
        print("Hiba: Nem siker√ºlt √ºzenetet gener√°lni.")
    print("Admin √∂sszefoglal√≥ k√ºld√©se befejezve.")

if __name__ == "__main__":
    main()
