# send_admin_summary.py (V2.0 - Interakt√≠v Gombok K√ºld√©se)
import os
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from supabase import create_client, Client
from datetime import datetime, timedelta
import pytz
from dotenv import load_dotenv

# --- Konfigur√°ci√≥ ---
load_dotenv()
SUPABASE_URL = os.environ.get("SUPABASE_URL")
SUPABASE_KEY = os.environ.get("SUPABASE_KEY")
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
ADMIN_CHAT_ID = os.environ.get("ADMIN_CHAT_ID")

supabase: Client = None
if SUPABASE_URL and SUPABASE_KEY:
    try:
        supabase = create_client(SUPABASE_URL, SUPABASE_KEY)
    except Exception as e:
        print(f"Hiba a Supabase kliens inicializ√°l√°sakor: {e}")

BUDAPEST_TZ = pytz.timezone('Europe/Budapest')

def send_telegram_message(chat_id, text, markup=None):
    """ Telegram √ºzenet k√ºld√©se gombokkal (ha van markup) """
    if not TELEGRAM_TOKEN or not chat_id:
        print("Hiba: Telegram token vagy Admin Chat ID hi√°nyzik.")
        return False
    
    try:
        bot = telebot.TeleBot(TELEGRAM_TOKEN)
        bot.send_message(chat_id, text, reply_markup=markup, parse_mode="HTML")
        return True
    except Exception as e:
        print(f"Hiba a Telegram √ºzenet k√ºld√©sekor: {e}")
        return False

def get_tips_for_approval(tomorrow_str):
    """ Lek√©rdezi a tippeket (nem csak megsz√°molja) """
    try:
        # Most m√°r sz√ºks√©g√ºnk van a r√©szletekre, ez√©rt joinolunk
        # Ez a lek√©rdez√©s felt√©telezi, hogy a 'tipp_id_k' egy ID t√∂mb a 'meccsek' t√°bl√°b√≥l
        response = supabase.table("napi_tuti").select("*, meccsek(*)").ilike("tipp_neve", f"%{tomorrow_str}%").execute()
        
        return response.data if response.data else []
            
    except Exception as e:
        print(f"Hiba a tippek lek√©rdez√©sekor: {e}")
        # Megpr√≥b√°ljuk √∫jra a sima count-ot, hogy legal√°bb a hiba√ºzenet elmenjen
        try:
            count_response = supabase.table("napi_tuti").select("id", count='exact').ilike("tipp_neve", f"%{tomorrow_str}%").execute()
            return f"HIB√ÅS LEK√âRDEZ√âS: {count_response.count} tipp tal√°lhat√≥, de a r√©szletek olvas√°sa sikertelen. ({e})"
        except:
            return f"KRITIKUS HIBA: {e}"


def create_approval_buttons(date_str):
    """ L√©trehozza a J√≥v√°hagy√°s / Elutas√≠t√°s gombokat """
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(
        InlineKeyboardButton("‚úÖ J√≥v√°hagy√°s", callback_data=f"approve:{date_str}"),
        InlineKeyboardButton("‚ùå Elutas√≠t√°s (T√∂rl√©s)", callback_data=f"reject:{date_str}")
    )
    return markup

def main():
    print("Admin √∂sszefoglal√≥ k√ºld√©se indul... (V2.0 - Gombokkal)")
    
    if not supabase or not TELEGRAM_TOKEN or not ADMIN_CHAT_ID:
        print("Hiba: Hi√°nyz√≥ Supabase vagy Telegram konfigur√°ci√≥.")
        return

    try:
        now_bp = datetime.now(BUDAPEST_TZ)
        tomorrow_str = (now_bp + timedelta(days=1)).strftime("%Y-%m-%d")

        status_response = supabase.table("daily_status").select("status").eq("date", tomorrow_str).execute()
        
        status = ""
        if status_response.data:
            status = status_response.data[0].get('status', 'Nincs adat')
        else:
            status = 'Nincs bejegyz√©s'
            
        message_to_admin = ""

        if status == "J√≥v√°hagy√°sra v√°r":
            tips_data = get_tips_for_approval(tomorrow_str)
            
            if isinstance(tips_data, str): # Hiba t√∂rt√©nt a lek√©rdez√©skor
                message_to_admin = tips_data
                send_telegram_message(ADMIN_CHAT_ID, message_to_admin)
                return

            if tips_data:
                message_to_admin = f"<b>üîî √öj tippek v√°rnak j√≥v√°hagy√°sra ({tomorrow_str}):</b>\n"
                for i, tip in enumerate(tips_data, 1):
                    message_to_admin += f"\n<b>Szelv√©ny #{i} (E: {tip.get('confidence_percent', 'N/A')}%)</b>\n"
                    if tip.get('meccsek'):
                        for meccs in tip.get('meccsek'):
                            message_to_admin += f"  - {meccs.get('csapat_H', '?')} vs {meccs.get('csapat_V', '?')} (Tipp: {meccs.get('tipp', '?')})\n"
                    else:
                        message_to_admin += "  - (Hiba: Meccs adatok nem t√∂lt≈ëdtek be)\n"
                
                buttons = create_approval_buttons(tomorrow_str)
                send_telegram_message(ADMIN_CHAT_ID, message_to_admin, buttons)
            else:
                message_to_admin = f"‚ö†Ô∏è Figyelem! A holnapi ({tomorrow_str}) st√°tusz 'J√≥v√°hagy√°sra v√°r', de nem tal√°ltam hozz√° tartoz√≥ tippeket az adatb√°zisban."
                send_telegram_message(ADMIN_CHAT_ID, message_to_admin)
        
        elif status == "Nincs megfelel≈ë tipp":
            message_to_admin = f"‚ÑπÔ∏è A holnapi ({tomorrow_str}) napra a bot nem tal√°lt a felt√©teleknek megfelel≈ë tippet."
            send_telegram_message(ADMIN_CHAT_ID, message_to_admin)
        
        else:
            message_to_admin = f"‚ö†Ô∏è Ismeretlen st√°tusz a holnapi ({tomorrow_str}) napra: '{status}'."
            send_telegram_message(ADMIN_CHAT_ID, message_to_admin)

    except Exception as e:
        print(f"Hiba az admin √∂sszefoglal√≥ k√©sz√≠t√©sekor: {e}")
        send_telegram_message(ADMIN_CHAT_ID, f"!!! KRITIKUS HIBA az admin √∂sszefoglal√≥ k√©sz√≠t√©sekor: {e}")

    print("Admin √∂sszefoglal√≥ k√ºld√©se befejezve.")

if __name__ == "__main__":
    main()
