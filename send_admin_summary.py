# send_admin_summary.py (V4.3 - Hibakezel√©s Jav√≠tva)
import os
import asyncio
import telegram
from datetime import datetime
import pytz
import json

# --- Konfigur√°ci√≥ ---
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
ADMIN_CHAT_ID = 1326707238
HUNGARY_TZ = pytz.timezone('Europe/Budapest')

def get_tip_details(tip_text):
    tip_map = {
        "Home & Over 1.5": "Hazai nyer √©s 1.5 g√≥l felett",
        "Away & Over 1.5": "Vend√©g nyer √©s 1.5 g√≥l felett",
        "Over 2.5": "G√≥lok 2.5 felett",
        "BTTS": "Mindk√©t csapat szerez g√≥lt"
    }
    return tip_map.get(tip_text, tip_text.replace('_', ' ').replace('&', '√©s'))

async def send_summary():
    if not all([TELEGRAM_TOKEN, ADMIN_CHAT_ID]):
        print("Hiba: Telegram token vagy Admin Chat ID hi√°nyzik.")
        return

    print("Admin teszt √∂sszefoglal√≥ k√ºld√©se...")
    bot = telegram.Bot(token=TELEGRAM_TOKEN)
    generation_date_str = datetime.now(HUNGARY_TZ).strftime("%Y-%m-%d")
    message_to_admin = f"ü§ñ *Admin Teszt Futtat√°s Jelent√©s ({generation_date_str})*\n\n"

    try:
        if not os.path.exists('test_results.json'):
            message_to_admin += "‚ö†Ô∏è *Kritikus Hiba:* A `test_results.json` f√°jl nem j√∂tt l√©tre. A gener√°tor val√≥sz√≠n≈±leg hib√°val le√°llt."
        else:
            with open('test_results.json', 'r', encoding='utf-8') as f:
                results = json.load(f)
            
            status = results.get('status')

            if status == "Tippek gener√°lva":
                slips = results.get('slips', [])
                if slips:
                    message_to_admin += "‚úÖ *Sikeres gener√°l√°s!* A k√∂vetkez≈ë szelv√©nyek j√∂ttek volna l√©tre:\n\n"
                    for i, slip in enumerate(slips):
                        message_to_admin += f"*{slip['tipp_neve']}* (Megb√≠zhat√≥s√°g: {slip['confidence_percent']}%)\n\n"
                        for meccs in slip.get('combo', []):
                            local_time = datetime.fromisoformat(meccs['kezdes'].replace('Z', '+00:00')).astimezone(HUNGARY_TZ)
                            kezdes_str = local_time.strftime('%b %d. %H:%M')
                            tipp_str = get_tip_details(meccs['tipp'])
                            message_to_admin += f"‚öΩÔ∏è *{meccs['csapat_H']} vs {meccs['csapat_V']}*\n"
                            message_to_admin += f"üèÜ {meccs['liga_nev']}\n"
                            message_to_admin += f"‚è∞ Kezd√©s: {kezdes_str}\n"
                            message_to_admin += f"üí° Tipp: {tipp_str} *@{'%.2f' % meccs['odds']}*\n\n"
                        message_to_admin += f"üéØ Ered≈ë odds: *{'%.2f' % slip['eredo_odds']}*\n"
                        if i < len(slips) - 1:
                            message_to_admin += "\n-----------------------------------\n\n"
                else:
                    message_to_admin += "‚ÑπÔ∏è *Nincs szelv√©ny.* B√°r a rendszer tal√°lt tippeket, nem tudott bel≈ël√ºk a szab√°lyoknak megfelel≈ë szelv√©nyt √∂ssze√°ll√≠tani.\n"
            
            elif status == "Nincs megfelel≈ë tipp":
                reason = results.get('reason', 'Ismeretlen ok.')
                message_to_admin += f"‚ÑπÔ∏è *Nincs tipp a mai napra.*\nIndokl√°s: {reason}"
            
            else:
                message_to_admin += f"‚ö†Ô∏è *Ismeretlen st√°tusz:* `{status}`"

        await bot.send_message(chat_id=ADMIN_CHAT_ID, text=message_to_admin, parse_mode='Markdown')
        print("Admin √∂sszefoglal√≥ sikeresen elk√ºldve.")

    except Exception as e:
        error_message = f"ü§ñ *Admin Teszt Futtat√°s - HIBA!*\n\nHiba t√∂rt√©nt az √∂sszefoglal√≥ k√©sz√≠t√©se sor√°n:\n`{e}`"
        await bot.send_message(chat_id=ADMIN_CHAT_ID, text=error_message, parse_mode='Markdown')
        print(f"Hiba t√∂rt√©nt az admin √∂sszefoglal√≥ k√ºld√©se sor√°n: {e}")

if __name__ == "__main__":
    asyncio.run(send_summary())
